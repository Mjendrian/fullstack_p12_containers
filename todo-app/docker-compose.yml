services:
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:       
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    container_name: mongo-prod
  
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] 
    container_name: redis-prod

  node:
    image: todo-back-prod-img
    build:
      context: ./todo-backend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    ports:
      - 3001:3001
    environment: 
      ENV REDIS_URL: redis://redis:6379 
      ENV MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
    container_name: todo-back-prod 
    depends_on:
      - redis
      - mongo

  app:
    image: todo-app-prod-image
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    ports:
      - 80:80
    environment: 
      REACT_APP_BACKEND_URL: http://localhost:8080/api
    container_name: todo-app-prod # This will name the container hello-front-dev
    depends_on:
      - node

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - node